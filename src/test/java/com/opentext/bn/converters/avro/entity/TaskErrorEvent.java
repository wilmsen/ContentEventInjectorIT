/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.opentext.bn.converters.avro.entity;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TaskErrorEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9134924123632955793L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TaskErrorEvent\",\"namespace\":\"com.opentext.bn.converters.avro.entity\",\"fields\":[{\"name\":\"errorInfo\",\"type\":{\"type\":\"record\",\"name\":\"ErrorInfo\",\"fields\":[{\"name\":\"errorCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"externalErrorMessage\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"internalErrorMessage\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isPayloadRelated\",\"type\":\"boolean\"}]}},{\"name\":\"errorTimestamp\",\"type\":\"long\"},{\"name\":\"executionDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ProcessingParam\",\"fields\":[{\"name\":\"key\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}],\"default\":null},{\"name\":\"inputPayload\",\"type\":{\"type\":\"record\",\"name\":\"PayloadRef\",\"fields\":[{\"name\":\"payloadId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"payloadType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}},{\"name\":\"outputPayload\",\"type\":[\"null\",\"PayloadRef\"],\"default\":null},{\"name\":\"startTimestamp\",\"type\":\"long\"},{\"name\":\"taskName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"transactionContext\",\"type\":{\"type\":\"record\",\"name\":\"TransactionContext\",\"fields\":[{\"name\":\"boundaryParentProcessId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"correlationId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"documentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"eventTimestamp\",\"type\":\"long\"},{\"name\":\"flowId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"parentProcessId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ownershipIndicator\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"OwnershipIndicator\",\"symbols\":[\"SENDER\",\"RECEIVER\",\"BOTH\"]}],\"default\":null},{\"name\":\"priority\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"processId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"processingCell\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"processingComputeZone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"processingRegion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"receiverAddress\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"relatedTransactions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RelatedTransaction\",\"fields\":[{\"name\":\"relationType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"transactionId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}],\"default\":null},{\"name\":\"senderAddress\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"serviceInstanceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"serviceName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"solutionId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"taskId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"testProdIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transactionId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"transactionTags\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}},{\"name\":\"transactionLinks\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TransactionLinks\",\"fields\":[{\"name\":\"documentChangeInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DocumentChangeInfo\",\"fields\":[{\"name\":\"didDocumentChange\",\"type\":\"boolean\"}]}],\"default\":null},{\"name\":\"finalTaskInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"FinalTaskInfo\",\"fields\":[{\"name\":\"transactionStatus\",\"type\":{\"type\":\"enum\",\"name\":\"TransactionStatus\",\"symbols\":[\"PROCESSING\",\"DELIVERY_IN_PROGRESS\",\"DELIVERY_DISABLED\",\"READY_FOR_PICKUP\",\"BATCHED\",\"DELIVERED\",\"ON_HOLD\",\"DUPLICATED\",\"RECEIVER_ERROR\",\"DELIVERY_ERROR\",\"VALIDATION_ERROR\",\"FAILED\",\"COMPLETED\",\"TERMINATED\"]}}]}],\"default\":null},{\"name\":\"transactionMergeInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TransactionMergeInfo\",\"fields\":[{\"name\":\"mergeTransactionId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}],\"default\":null},{\"name\":\"newTransactionInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"NewTransactionInfo\",\"fields\":[{\"name\":\"parentTransactionId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"payloadRef\",\"type\":\"PayloadRef\"}]}],\"default\":null},{\"name\":\"transactionSplitInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TransactionSplitInfo\",\"fields\":[{\"name\":\"didSplitChildren\",\"type\":\"boolean\"}]}],\"default\":null}]}],\"default\":null},{\"name\":\"processingStages\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ProcessingStages\",\"fields\":[{\"name\":\"stageDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"ProcessingParam\"}],\"default\":null},{\"name\":\"stageEndTimestamp\",\"type\":\"long\"},{\"name\":\"stageId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"stageName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"stageStartTimestamp\",\"type\":\"long\"},{\"name\":\"errorInfo\",\"type\":[\"null\",\"ErrorInfo\"],\"default\":null},{\"name\":\"contentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TaskErrorEvent> ENCODER =
      new BinaryMessageEncoder<TaskErrorEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TaskErrorEvent> DECODER =
      new BinaryMessageDecoder<TaskErrorEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<TaskErrorEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<TaskErrorEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TaskErrorEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this TaskErrorEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a TaskErrorEvent from a ByteBuffer. */
  public static TaskErrorEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private com.opentext.bn.converters.avro.entity.ErrorInfo errorInfo;
   private long errorTimestamp;
   private java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> executionDetails;
   private com.opentext.bn.converters.avro.entity.PayloadRef inputPayload;
   private com.opentext.bn.converters.avro.entity.PayloadRef outputPayload;
   private long startTimestamp;
   private java.lang.String taskName;
   private com.opentext.bn.converters.avro.entity.TransactionContext transactionContext;
   private com.opentext.bn.converters.avro.entity.TransactionLinks transactionLinks;
   private java.util.List<com.opentext.bn.converters.avro.entity.ProcessingStages> processingStages;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TaskErrorEvent() {}

  /**
   * All-args constructor.
   * @param errorInfo The new value for errorInfo
   * @param errorTimestamp The new value for errorTimestamp
   * @param executionDetails The new value for executionDetails
   * @param inputPayload The new value for inputPayload
   * @param outputPayload The new value for outputPayload
   * @param startTimestamp The new value for startTimestamp
   * @param taskName The new value for taskName
   * @param transactionContext The new value for transactionContext
   * @param transactionLinks The new value for transactionLinks
   * @param processingStages The new value for processingStages
   */
  public TaskErrorEvent(com.opentext.bn.converters.avro.entity.ErrorInfo errorInfo, java.lang.Long errorTimestamp, java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> executionDetails, com.opentext.bn.converters.avro.entity.PayloadRef inputPayload, com.opentext.bn.converters.avro.entity.PayloadRef outputPayload, java.lang.Long startTimestamp, java.lang.String taskName, com.opentext.bn.converters.avro.entity.TransactionContext transactionContext, com.opentext.bn.converters.avro.entity.TransactionLinks transactionLinks, java.util.List<com.opentext.bn.converters.avro.entity.ProcessingStages> processingStages) {
    this.errorInfo = errorInfo;
    this.errorTimestamp = errorTimestamp;
    this.executionDetails = executionDetails;
    this.inputPayload = inputPayload;
    this.outputPayload = outputPayload;
    this.startTimestamp = startTimestamp;
    this.taskName = taskName;
    this.transactionContext = transactionContext;
    this.transactionLinks = transactionLinks;
    this.processingStages = processingStages;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return errorInfo;
    case 1: return errorTimestamp;
    case 2: return executionDetails;
    case 3: return inputPayload;
    case 4: return outputPayload;
    case 5: return startTimestamp;
    case 6: return taskName;
    case 7: return transactionContext;
    case 8: return transactionLinks;
    case 9: return processingStages;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: errorInfo = (com.opentext.bn.converters.avro.entity.ErrorInfo)value$; break;
    case 1: errorTimestamp = (java.lang.Long)value$; break;
    case 2: executionDetails = (java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam>)value$; break;
    case 3: inputPayload = (com.opentext.bn.converters.avro.entity.PayloadRef)value$; break;
    case 4: outputPayload = (com.opentext.bn.converters.avro.entity.PayloadRef)value$; break;
    case 5: startTimestamp = (java.lang.Long)value$; break;
    case 6: taskName = (java.lang.String)value$; break;
    case 7: transactionContext = (com.opentext.bn.converters.avro.entity.TransactionContext)value$; break;
    case 8: transactionLinks = (com.opentext.bn.converters.avro.entity.TransactionLinks)value$; break;
    case 9: processingStages = (java.util.List<com.opentext.bn.converters.avro.entity.ProcessingStages>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'errorInfo' field.
   * @return The value of the 'errorInfo' field.
   */
  public com.opentext.bn.converters.avro.entity.ErrorInfo getErrorInfo() {
    return errorInfo;
  }


  /**
   * Gets the value of the 'errorTimestamp' field.
   * @return The value of the 'errorTimestamp' field.
   */
  public java.lang.Long getErrorTimestamp() {
    return errorTimestamp;
  }


  /**
   * Gets the value of the 'executionDetails' field.
   * @return The value of the 'executionDetails' field.
   */
  public java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> getExecutionDetails() {
    return executionDetails;
  }


  /**
   * Gets the value of the 'inputPayload' field.
   * @return The value of the 'inputPayload' field.
   */
  public com.opentext.bn.converters.avro.entity.PayloadRef getInputPayload() {
    return inputPayload;
  }


  /**
   * Gets the value of the 'outputPayload' field.
   * @return The value of the 'outputPayload' field.
   */
  public com.opentext.bn.converters.avro.entity.PayloadRef getOutputPayload() {
    return outputPayload;
  }


  /**
   * Gets the value of the 'startTimestamp' field.
   * @return The value of the 'startTimestamp' field.
   */
  public java.lang.Long getStartTimestamp() {
    return startTimestamp;
  }


  /**
   * Gets the value of the 'taskName' field.
   * @return The value of the 'taskName' field.
   */
  public java.lang.String getTaskName() {
    return taskName;
  }


  /**
   * Gets the value of the 'transactionContext' field.
   * @return The value of the 'transactionContext' field.
   */
  public com.opentext.bn.converters.avro.entity.TransactionContext getTransactionContext() {
    return transactionContext;
  }


  /**
   * Gets the value of the 'transactionLinks' field.
   * @return The value of the 'transactionLinks' field.
   */
  public com.opentext.bn.converters.avro.entity.TransactionLinks getTransactionLinks() {
    return transactionLinks;
  }


  /**
   * Gets the value of the 'processingStages' field.
   * @return The value of the 'processingStages' field.
   */
  public java.util.List<com.opentext.bn.converters.avro.entity.ProcessingStages> getProcessingStages() {
    return processingStages;
  }


  /**
   * Creates a new TaskErrorEvent RecordBuilder.
   * @return A new TaskErrorEvent RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder newBuilder() {
    return new com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder();
  }

  /**
   * Creates a new TaskErrorEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TaskErrorEvent RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder newBuilder(com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder other) {
    return new com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder(other);
  }

  /**
   * Creates a new TaskErrorEvent RecordBuilder by copying an existing TaskErrorEvent instance.
   * @param other The existing instance to copy.
   * @return A new TaskErrorEvent RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder newBuilder(com.opentext.bn.converters.avro.entity.TaskErrorEvent other) {
    return new com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder(other);
  }

  /**
   * RecordBuilder for TaskErrorEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TaskErrorEvent>
    implements org.apache.avro.data.RecordBuilder<TaskErrorEvent> {

    private com.opentext.bn.converters.avro.entity.ErrorInfo errorInfo;
    private com.opentext.bn.converters.avro.entity.ErrorInfo.Builder errorInfoBuilder;
    private long errorTimestamp;
    private java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> executionDetails;
    private com.opentext.bn.converters.avro.entity.PayloadRef inputPayload;
    private com.opentext.bn.converters.avro.entity.PayloadRef.Builder inputPayloadBuilder;
    private com.opentext.bn.converters.avro.entity.PayloadRef outputPayload;
    private com.opentext.bn.converters.avro.entity.PayloadRef.Builder outputPayloadBuilder;
    private long startTimestamp;
    private java.lang.String taskName;
    private com.opentext.bn.converters.avro.entity.TransactionContext transactionContext;
    private com.opentext.bn.converters.avro.entity.TransactionContext.Builder transactionContextBuilder;
    private com.opentext.bn.converters.avro.entity.TransactionLinks transactionLinks;
    private com.opentext.bn.converters.avro.entity.TransactionLinks.Builder transactionLinksBuilder;
    private java.util.List<com.opentext.bn.converters.avro.entity.ProcessingStages> processingStages;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.errorInfo)) {
        this.errorInfo = data().deepCopy(fields()[0].schema(), other.errorInfo);
        fieldSetFlags()[0] = true;
      }
      if (other.hasErrorInfoBuilder()) {
        this.errorInfoBuilder = com.opentext.bn.converters.avro.entity.ErrorInfo.newBuilder(other.getErrorInfoBuilder());
      }
      if (isValidValue(fields()[1], other.errorTimestamp)) {
        this.errorTimestamp = data().deepCopy(fields()[1].schema(), other.errorTimestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.executionDetails)) {
        this.executionDetails = data().deepCopy(fields()[2].schema(), other.executionDetails);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.inputPayload)) {
        this.inputPayload = data().deepCopy(fields()[3].schema(), other.inputPayload);
        fieldSetFlags()[3] = true;
      }
      if (other.hasInputPayloadBuilder()) {
        this.inputPayloadBuilder = com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder(other.getInputPayloadBuilder());
      }
      if (isValidValue(fields()[4], other.outputPayload)) {
        this.outputPayload = data().deepCopy(fields()[4].schema(), other.outputPayload);
        fieldSetFlags()[4] = true;
      }
      if (other.hasOutputPayloadBuilder()) {
        this.outputPayloadBuilder = com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder(other.getOutputPayloadBuilder());
      }
      if (isValidValue(fields()[5], other.startTimestamp)) {
        this.startTimestamp = data().deepCopy(fields()[5].schema(), other.startTimestamp);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.taskName)) {
        this.taskName = data().deepCopy(fields()[6].schema(), other.taskName);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.transactionContext)) {
        this.transactionContext = data().deepCopy(fields()[7].schema(), other.transactionContext);
        fieldSetFlags()[7] = true;
      }
      if (other.hasTransactionContextBuilder()) {
        this.transactionContextBuilder = com.opentext.bn.converters.avro.entity.TransactionContext.newBuilder(other.getTransactionContextBuilder());
      }
      if (isValidValue(fields()[8], other.transactionLinks)) {
        this.transactionLinks = data().deepCopy(fields()[8].schema(), other.transactionLinks);
        fieldSetFlags()[8] = true;
      }
      if (other.hasTransactionLinksBuilder()) {
        this.transactionLinksBuilder = com.opentext.bn.converters.avro.entity.TransactionLinks.newBuilder(other.getTransactionLinksBuilder());
      }
      if (isValidValue(fields()[9], other.processingStages)) {
        this.processingStages = data().deepCopy(fields()[9].schema(), other.processingStages);
        fieldSetFlags()[9] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TaskErrorEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.opentext.bn.converters.avro.entity.TaskErrorEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.errorInfo)) {
        this.errorInfo = data().deepCopy(fields()[0].schema(), other.errorInfo);
        fieldSetFlags()[0] = true;
      }
      this.errorInfoBuilder = null;
      if (isValidValue(fields()[1], other.errorTimestamp)) {
        this.errorTimestamp = data().deepCopy(fields()[1].schema(), other.errorTimestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.executionDetails)) {
        this.executionDetails = data().deepCopy(fields()[2].schema(), other.executionDetails);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.inputPayload)) {
        this.inputPayload = data().deepCopy(fields()[3].schema(), other.inputPayload);
        fieldSetFlags()[3] = true;
      }
      this.inputPayloadBuilder = null;
      if (isValidValue(fields()[4], other.outputPayload)) {
        this.outputPayload = data().deepCopy(fields()[4].schema(), other.outputPayload);
        fieldSetFlags()[4] = true;
      }
      this.outputPayloadBuilder = null;
      if (isValidValue(fields()[5], other.startTimestamp)) {
        this.startTimestamp = data().deepCopy(fields()[5].schema(), other.startTimestamp);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.taskName)) {
        this.taskName = data().deepCopy(fields()[6].schema(), other.taskName);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.transactionContext)) {
        this.transactionContext = data().deepCopy(fields()[7].schema(), other.transactionContext);
        fieldSetFlags()[7] = true;
      }
      this.transactionContextBuilder = null;
      if (isValidValue(fields()[8], other.transactionLinks)) {
        this.transactionLinks = data().deepCopy(fields()[8].schema(), other.transactionLinks);
        fieldSetFlags()[8] = true;
      }
      this.transactionLinksBuilder = null;
      if (isValidValue(fields()[9], other.processingStages)) {
        this.processingStages = data().deepCopy(fields()[9].schema(), other.processingStages);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'errorInfo' field.
      * @return The value.
      */
    public com.opentext.bn.converters.avro.entity.ErrorInfo getErrorInfo() {
      return errorInfo;
    }

    /**
      * Sets the value of the 'errorInfo' field.
      * @param value The value of 'errorInfo'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setErrorInfo(com.opentext.bn.converters.avro.entity.ErrorInfo value) {
      validate(fields()[0], value);
      this.errorInfoBuilder = null;
      this.errorInfo = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'errorInfo' field has been set.
      * @return True if the 'errorInfo' field has been set, false otherwise.
      */
    public boolean hasErrorInfo() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'errorInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.ErrorInfo.Builder getErrorInfoBuilder() {
      if (errorInfoBuilder == null) {
        if (hasErrorInfo()) {
          setErrorInfoBuilder(com.opentext.bn.converters.avro.entity.ErrorInfo.newBuilder(errorInfo));
        } else {
          setErrorInfoBuilder(com.opentext.bn.converters.avro.entity.ErrorInfo.newBuilder());
        }
      }
      return errorInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'errorInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setErrorInfoBuilder(com.opentext.bn.converters.avro.entity.ErrorInfo.Builder value) {
      clearErrorInfo();
      errorInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'errorInfo' field has an active Builder instance
     * @return True if the 'errorInfo' field has an active Builder instance
     */
    public boolean hasErrorInfoBuilder() {
      return errorInfoBuilder != null;
    }

    /**
      * Clears the value of the 'errorInfo' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder clearErrorInfo() {
      errorInfo = null;
      errorInfoBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'errorTimestamp' field.
      * @return The value.
      */
    public java.lang.Long getErrorTimestamp() {
      return errorTimestamp;
    }

    /**
      * Sets the value of the 'errorTimestamp' field.
      * @param value The value of 'errorTimestamp'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setErrorTimestamp(long value) {
      validate(fields()[1], value);
      this.errorTimestamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'errorTimestamp' field has been set.
      * @return True if the 'errorTimestamp' field has been set, false otherwise.
      */
    public boolean hasErrorTimestamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'errorTimestamp' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder clearErrorTimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'executionDetails' field.
      * @return The value.
      */
    public java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> getExecutionDetails() {
      return executionDetails;
    }

    /**
      * Sets the value of the 'executionDetails' field.
      * @param value The value of 'executionDetails'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setExecutionDetails(java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> value) {
      validate(fields()[2], value);
      this.executionDetails = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'executionDetails' field has been set.
      * @return True if the 'executionDetails' field has been set, false otherwise.
      */
    public boolean hasExecutionDetails() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'executionDetails' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder clearExecutionDetails() {
      executionDetails = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'inputPayload' field.
      * @return The value.
      */
    public com.opentext.bn.converters.avro.entity.PayloadRef getInputPayload() {
      return inputPayload;
    }

    /**
      * Sets the value of the 'inputPayload' field.
      * @param value The value of 'inputPayload'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setInputPayload(com.opentext.bn.converters.avro.entity.PayloadRef value) {
      validate(fields()[3], value);
      this.inputPayloadBuilder = null;
      this.inputPayload = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'inputPayload' field has been set.
      * @return True if the 'inputPayload' field has been set, false otherwise.
      */
    public boolean hasInputPayload() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'inputPayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.PayloadRef.Builder getInputPayloadBuilder() {
      if (inputPayloadBuilder == null) {
        if (hasInputPayload()) {
          setInputPayloadBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder(inputPayload));
        } else {
          setInputPayloadBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder());
        }
      }
      return inputPayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'inputPayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setInputPayloadBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.Builder value) {
      clearInputPayload();
      inputPayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'inputPayload' field has an active Builder instance
     * @return True if the 'inputPayload' field has an active Builder instance
     */
    public boolean hasInputPayloadBuilder() {
      return inputPayloadBuilder != null;
    }

    /**
      * Clears the value of the 'inputPayload' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder clearInputPayload() {
      inputPayload = null;
      inputPayloadBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'outputPayload' field.
      * @return The value.
      */
    public com.opentext.bn.converters.avro.entity.PayloadRef getOutputPayload() {
      return outputPayload;
    }

    /**
      * Sets the value of the 'outputPayload' field.
      * @param value The value of 'outputPayload'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setOutputPayload(com.opentext.bn.converters.avro.entity.PayloadRef value) {
      validate(fields()[4], value);
      this.outputPayloadBuilder = null;
      this.outputPayload = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'outputPayload' field has been set.
      * @return True if the 'outputPayload' field has been set, false otherwise.
      */
    public boolean hasOutputPayload() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'outputPayload' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.PayloadRef.Builder getOutputPayloadBuilder() {
      if (outputPayloadBuilder == null) {
        if (hasOutputPayload()) {
          setOutputPayloadBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder(outputPayload));
        } else {
          setOutputPayloadBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder());
        }
      }
      return outputPayloadBuilder;
    }

    /**
     * Sets the Builder instance for the 'outputPayload' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setOutputPayloadBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.Builder value) {
      clearOutputPayload();
      outputPayloadBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'outputPayload' field has an active Builder instance
     * @return True if the 'outputPayload' field has an active Builder instance
     */
    public boolean hasOutputPayloadBuilder() {
      return outputPayloadBuilder != null;
    }

    /**
      * Clears the value of the 'outputPayload' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder clearOutputPayload() {
      outputPayload = null;
      outputPayloadBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'startTimestamp' field.
      * @return The value.
      */
    public java.lang.Long getStartTimestamp() {
      return startTimestamp;
    }

    /**
      * Sets the value of the 'startTimestamp' field.
      * @param value The value of 'startTimestamp'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setStartTimestamp(long value) {
      validate(fields()[5], value);
      this.startTimestamp = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'startTimestamp' field has been set.
      * @return True if the 'startTimestamp' field has been set, false otherwise.
      */
    public boolean hasStartTimestamp() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'startTimestamp' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder clearStartTimestamp() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'taskName' field.
      * @return The value.
      */
    public java.lang.String getTaskName() {
      return taskName;
    }

    /**
      * Sets the value of the 'taskName' field.
      * @param value The value of 'taskName'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setTaskName(java.lang.String value) {
      validate(fields()[6], value);
      this.taskName = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'taskName' field has been set.
      * @return True if the 'taskName' field has been set, false otherwise.
      */
    public boolean hasTaskName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'taskName' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder clearTaskName() {
      taskName = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionContext' field.
      * @return The value.
      */
    public com.opentext.bn.converters.avro.entity.TransactionContext getTransactionContext() {
      return transactionContext;
    }

    /**
      * Sets the value of the 'transactionContext' field.
      * @param value The value of 'transactionContext'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setTransactionContext(com.opentext.bn.converters.avro.entity.TransactionContext value) {
      validate(fields()[7], value);
      this.transactionContextBuilder = null;
      this.transactionContext = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionContext' field has been set.
      * @return True if the 'transactionContext' field has been set, false otherwise.
      */
    public boolean hasTransactionContext() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'transactionContext' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.TransactionContext.Builder getTransactionContextBuilder() {
      if (transactionContextBuilder == null) {
        if (hasTransactionContext()) {
          setTransactionContextBuilder(com.opentext.bn.converters.avro.entity.TransactionContext.newBuilder(transactionContext));
        } else {
          setTransactionContextBuilder(com.opentext.bn.converters.avro.entity.TransactionContext.newBuilder());
        }
      }
      return transactionContextBuilder;
    }

    /**
     * Sets the Builder instance for the 'transactionContext' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setTransactionContextBuilder(com.opentext.bn.converters.avro.entity.TransactionContext.Builder value) {
      clearTransactionContext();
      transactionContextBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'transactionContext' field has an active Builder instance
     * @return True if the 'transactionContext' field has an active Builder instance
     */
    public boolean hasTransactionContextBuilder() {
      return transactionContextBuilder != null;
    }

    /**
      * Clears the value of the 'transactionContext' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder clearTransactionContext() {
      transactionContext = null;
      transactionContextBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionLinks' field.
      * @return The value.
      */
    public com.opentext.bn.converters.avro.entity.TransactionLinks getTransactionLinks() {
      return transactionLinks;
    }

    /**
      * Sets the value of the 'transactionLinks' field.
      * @param value The value of 'transactionLinks'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setTransactionLinks(com.opentext.bn.converters.avro.entity.TransactionLinks value) {
      validate(fields()[8], value);
      this.transactionLinksBuilder = null;
      this.transactionLinks = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionLinks' field has been set.
      * @return True if the 'transactionLinks' field has been set, false otherwise.
      */
    public boolean hasTransactionLinks() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'transactionLinks' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.TransactionLinks.Builder getTransactionLinksBuilder() {
      if (transactionLinksBuilder == null) {
        if (hasTransactionLinks()) {
          setTransactionLinksBuilder(com.opentext.bn.converters.avro.entity.TransactionLinks.newBuilder(transactionLinks));
        } else {
          setTransactionLinksBuilder(com.opentext.bn.converters.avro.entity.TransactionLinks.newBuilder());
        }
      }
      return transactionLinksBuilder;
    }

    /**
     * Sets the Builder instance for the 'transactionLinks' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setTransactionLinksBuilder(com.opentext.bn.converters.avro.entity.TransactionLinks.Builder value) {
      clearTransactionLinks();
      transactionLinksBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'transactionLinks' field has an active Builder instance
     * @return True if the 'transactionLinks' field has an active Builder instance
     */
    public boolean hasTransactionLinksBuilder() {
      return transactionLinksBuilder != null;
    }

    /**
      * Clears the value of the 'transactionLinks' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder clearTransactionLinks() {
      transactionLinks = null;
      transactionLinksBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'processingStages' field.
      * @return The value.
      */
    public java.util.List<com.opentext.bn.converters.avro.entity.ProcessingStages> getProcessingStages() {
      return processingStages;
    }

    /**
      * Sets the value of the 'processingStages' field.
      * @param value The value of 'processingStages'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder setProcessingStages(java.util.List<com.opentext.bn.converters.avro.entity.ProcessingStages> value) {
      validate(fields()[9], value);
      this.processingStages = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'processingStages' field has been set.
      * @return True if the 'processingStages' field has been set, false otherwise.
      */
    public boolean hasProcessingStages() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'processingStages' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TaskErrorEvent.Builder clearProcessingStages() {
      processingStages = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TaskErrorEvent build() {
      try {
        TaskErrorEvent record = new TaskErrorEvent();
        if (errorInfoBuilder != null) {
          record.errorInfo = this.errorInfoBuilder.build();
        } else {
          record.errorInfo = fieldSetFlags()[0] ? this.errorInfo : (com.opentext.bn.converters.avro.entity.ErrorInfo) defaultValue(fields()[0]);
        }
        record.errorTimestamp = fieldSetFlags()[1] ? this.errorTimestamp : (java.lang.Long) defaultValue(fields()[1]);
        record.executionDetails = fieldSetFlags()[2] ? this.executionDetails : (java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam>) defaultValue(fields()[2]);
        if (inputPayloadBuilder != null) {
          record.inputPayload = this.inputPayloadBuilder.build();
        } else {
          record.inputPayload = fieldSetFlags()[3] ? this.inputPayload : (com.opentext.bn.converters.avro.entity.PayloadRef) defaultValue(fields()[3]);
        }
        if (outputPayloadBuilder != null) {
          record.outputPayload = this.outputPayloadBuilder.build();
        } else {
          record.outputPayload = fieldSetFlags()[4] ? this.outputPayload : (com.opentext.bn.converters.avro.entity.PayloadRef) defaultValue(fields()[4]);
        }
        record.startTimestamp = fieldSetFlags()[5] ? this.startTimestamp : (java.lang.Long) defaultValue(fields()[5]);
        record.taskName = fieldSetFlags()[6] ? this.taskName : (java.lang.String) defaultValue(fields()[6]);
        if (transactionContextBuilder != null) {
          record.transactionContext = this.transactionContextBuilder.build();
        } else {
          record.transactionContext = fieldSetFlags()[7] ? this.transactionContext : (com.opentext.bn.converters.avro.entity.TransactionContext) defaultValue(fields()[7]);
        }
        if (transactionLinksBuilder != null) {
          record.transactionLinks = this.transactionLinksBuilder.build();
        } else {
          record.transactionLinks = fieldSetFlags()[8] ? this.transactionLinks : (com.opentext.bn.converters.avro.entity.TransactionLinks) defaultValue(fields()[8]);
        }
        record.processingStages = fieldSetFlags()[9] ? this.processingStages : (java.util.List<com.opentext.bn.converters.avro.entity.ProcessingStages>) defaultValue(fields()[9]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TaskErrorEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<TaskErrorEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TaskErrorEvent>
    READER$ = (org.apache.avro.io.DatumReader<TaskErrorEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
