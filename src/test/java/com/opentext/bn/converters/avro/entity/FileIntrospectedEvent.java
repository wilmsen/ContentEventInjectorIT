/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.opentext.bn.converters.avro.entity;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FileIntrospectedEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3293036548565193293L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FileIntrospectedEvent\",\"namespace\":\"com.opentext.bn.converters.avro.entity\",\"fields\":[{\"name\":\"processId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"eventTimestamp\",\"type\":\"long\"},{\"name\":\"eventId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"transactionId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"taskId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"assets\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Asset\",\"fields\":[{\"name\":\"assetId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"assetName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"assetType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"assetDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"xifInfo\",\"type\":{\"type\":\"record\",\"name\":\"PayloadRef\",\"fields\":[{\"name\":\"payloadId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"payloadType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}}],\"default\":null},{\"name\":\"appFileCount\",\"type\":\"int\"},{\"name\":\"bypassFileCount\",\"type\":\"int\"},{\"name\":\"comFileCount\",\"type\":\"int\"},{\"name\":\"errorCount\",\"type\":\"int\"},{\"name\":\"inputEdiDocumentCount\",\"type\":\"int\"},{\"name\":\"inputEdiFileCount\",\"type\":\"int\"},{\"name\":\"inputInterchangeCount\",\"type\":\"int\"},{\"name\":\"inputUdfDocumentCount\",\"type\":\"int\"},{\"name\":\"inputUdfFileCount\",\"type\":\"int\"},{\"name\":\"introspectionSessionNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"introspectionSource\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"outputEdiDocumentCount\",\"type\":\"int\"},{\"name\":\"outputEdiFileCount\",\"type\":\"int\"},{\"name\":\"outputInterchangeCount\",\"type\":\"int\"},{\"name\":\"outputUdfDocumentCount\",\"type\":\"int\"},{\"name\":\"outputUdfFileCount\",\"type\":\"int\"},{\"name\":\"rejectedFileCount\",\"type\":\"int\"},{\"name\":\"xifInfo\",\"type\":\"PayloadRef\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FileIntrospectedEvent> ENCODER =
      new BinaryMessageEncoder<FileIntrospectedEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FileIntrospectedEvent> DECODER =
      new BinaryMessageDecoder<FileIntrospectedEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<FileIntrospectedEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<FileIntrospectedEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FileIntrospectedEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this FileIntrospectedEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a FileIntrospectedEvent from a ByteBuffer. */
  public static FileIntrospectedEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String processId;
   private long eventTimestamp;
   private java.lang.String eventId;
   private java.lang.String transactionId;
   private java.lang.String taskId;
   private java.util.List<com.opentext.bn.converters.avro.entity.Asset> assets;
   private int appFileCount;
   private int bypassFileCount;
   private int comFileCount;
   private int errorCount;
   private int inputEdiDocumentCount;
   private int inputEdiFileCount;
   private int inputInterchangeCount;
   private int inputUdfDocumentCount;
   private int inputUdfFileCount;
   private java.lang.String introspectionSessionNumber;
   private java.lang.String introspectionSource;
   private int outputEdiDocumentCount;
   private int outputEdiFileCount;
   private int outputInterchangeCount;
   private int outputUdfDocumentCount;
   private int outputUdfFileCount;
   private int rejectedFileCount;
   private com.opentext.bn.converters.avro.entity.PayloadRef xifInfo;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FileIntrospectedEvent() {}

  /**
   * All-args constructor.
   * @param processId The new value for processId
   * @param eventTimestamp The new value for eventTimestamp
   * @param eventId The new value for eventId
   * @param transactionId The new value for transactionId
   * @param taskId The new value for taskId
   * @param assets The new value for assets
   * @param appFileCount The new value for appFileCount
   * @param bypassFileCount The new value for bypassFileCount
   * @param comFileCount The new value for comFileCount
   * @param errorCount The new value for errorCount
   * @param inputEdiDocumentCount The new value for inputEdiDocumentCount
   * @param inputEdiFileCount The new value for inputEdiFileCount
   * @param inputInterchangeCount The new value for inputInterchangeCount
   * @param inputUdfDocumentCount The new value for inputUdfDocumentCount
   * @param inputUdfFileCount The new value for inputUdfFileCount
   * @param introspectionSessionNumber The new value for introspectionSessionNumber
   * @param introspectionSource The new value for introspectionSource
   * @param outputEdiDocumentCount The new value for outputEdiDocumentCount
   * @param outputEdiFileCount The new value for outputEdiFileCount
   * @param outputInterchangeCount The new value for outputInterchangeCount
   * @param outputUdfDocumentCount The new value for outputUdfDocumentCount
   * @param outputUdfFileCount The new value for outputUdfFileCount
   * @param rejectedFileCount The new value for rejectedFileCount
   * @param xifInfo The new value for xifInfo
   */
  public FileIntrospectedEvent(java.lang.String processId, java.lang.Long eventTimestamp, java.lang.String eventId, java.lang.String transactionId, java.lang.String taskId, java.util.List<com.opentext.bn.converters.avro.entity.Asset> assets, java.lang.Integer appFileCount, java.lang.Integer bypassFileCount, java.lang.Integer comFileCount, java.lang.Integer errorCount, java.lang.Integer inputEdiDocumentCount, java.lang.Integer inputEdiFileCount, java.lang.Integer inputInterchangeCount, java.lang.Integer inputUdfDocumentCount, java.lang.Integer inputUdfFileCount, java.lang.String introspectionSessionNumber, java.lang.String introspectionSource, java.lang.Integer outputEdiDocumentCount, java.lang.Integer outputEdiFileCount, java.lang.Integer outputInterchangeCount, java.lang.Integer outputUdfDocumentCount, java.lang.Integer outputUdfFileCount, java.lang.Integer rejectedFileCount, com.opentext.bn.converters.avro.entity.PayloadRef xifInfo) {
    this.processId = processId;
    this.eventTimestamp = eventTimestamp;
    this.eventId = eventId;
    this.transactionId = transactionId;
    this.taskId = taskId;
    this.assets = assets;
    this.appFileCount = appFileCount;
    this.bypassFileCount = bypassFileCount;
    this.comFileCount = comFileCount;
    this.errorCount = errorCount;
    this.inputEdiDocumentCount = inputEdiDocumentCount;
    this.inputEdiFileCount = inputEdiFileCount;
    this.inputInterchangeCount = inputInterchangeCount;
    this.inputUdfDocumentCount = inputUdfDocumentCount;
    this.inputUdfFileCount = inputUdfFileCount;
    this.introspectionSessionNumber = introspectionSessionNumber;
    this.introspectionSource = introspectionSource;
    this.outputEdiDocumentCount = outputEdiDocumentCount;
    this.outputEdiFileCount = outputEdiFileCount;
    this.outputInterchangeCount = outputInterchangeCount;
    this.outputUdfDocumentCount = outputUdfDocumentCount;
    this.outputUdfFileCount = outputUdfFileCount;
    this.rejectedFileCount = rejectedFileCount;
    this.xifInfo = xifInfo;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return processId;
    case 1: return eventTimestamp;
    case 2: return eventId;
    case 3: return transactionId;
    case 4: return taskId;
    case 5: return assets;
    case 6: return appFileCount;
    case 7: return bypassFileCount;
    case 8: return comFileCount;
    case 9: return errorCount;
    case 10: return inputEdiDocumentCount;
    case 11: return inputEdiFileCount;
    case 12: return inputInterchangeCount;
    case 13: return inputUdfDocumentCount;
    case 14: return inputUdfFileCount;
    case 15: return introspectionSessionNumber;
    case 16: return introspectionSource;
    case 17: return outputEdiDocumentCount;
    case 18: return outputEdiFileCount;
    case 19: return outputInterchangeCount;
    case 20: return outputUdfDocumentCount;
    case 21: return outputUdfFileCount;
    case 22: return rejectedFileCount;
    case 23: return xifInfo;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: processId = (java.lang.String)value$; break;
    case 1: eventTimestamp = (java.lang.Long)value$; break;
    case 2: eventId = (java.lang.String)value$; break;
    case 3: transactionId = (java.lang.String)value$; break;
    case 4: taskId = (java.lang.String)value$; break;
    case 5: assets = (java.util.List<com.opentext.bn.converters.avro.entity.Asset>)value$; break;
    case 6: appFileCount = (java.lang.Integer)value$; break;
    case 7: bypassFileCount = (java.lang.Integer)value$; break;
    case 8: comFileCount = (java.lang.Integer)value$; break;
    case 9: errorCount = (java.lang.Integer)value$; break;
    case 10: inputEdiDocumentCount = (java.lang.Integer)value$; break;
    case 11: inputEdiFileCount = (java.lang.Integer)value$; break;
    case 12: inputInterchangeCount = (java.lang.Integer)value$; break;
    case 13: inputUdfDocumentCount = (java.lang.Integer)value$; break;
    case 14: inputUdfFileCount = (java.lang.Integer)value$; break;
    case 15: introspectionSessionNumber = (java.lang.String)value$; break;
    case 16: introspectionSource = (java.lang.String)value$; break;
    case 17: outputEdiDocumentCount = (java.lang.Integer)value$; break;
    case 18: outputEdiFileCount = (java.lang.Integer)value$; break;
    case 19: outputInterchangeCount = (java.lang.Integer)value$; break;
    case 20: outputUdfDocumentCount = (java.lang.Integer)value$; break;
    case 21: outputUdfFileCount = (java.lang.Integer)value$; break;
    case 22: rejectedFileCount = (java.lang.Integer)value$; break;
    case 23: xifInfo = (com.opentext.bn.converters.avro.entity.PayloadRef)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'processId' field.
   * @return The value of the 'processId' field.
   */
  public java.lang.String getProcessId() {
    return processId;
  }


  /**
   * Gets the value of the 'eventTimestamp' field.
   * @return The value of the 'eventTimestamp' field.
   */
  public java.lang.Long getEventTimestamp() {
    return eventTimestamp;
  }


  /**
   * Gets the value of the 'eventId' field.
   * @return The value of the 'eventId' field.
   */
  public java.lang.String getEventId() {
    return eventId;
  }


  /**
   * Gets the value of the 'transactionId' field.
   * @return The value of the 'transactionId' field.
   */
  public java.lang.String getTransactionId() {
    return transactionId;
  }


  /**
   * Gets the value of the 'taskId' field.
   * @return The value of the 'taskId' field.
   */
  public java.lang.String getTaskId() {
    return taskId;
  }


  /**
   * Gets the value of the 'assets' field.
   * @return The value of the 'assets' field.
   */
  public java.util.List<com.opentext.bn.converters.avro.entity.Asset> getAssets() {
    return assets;
  }


  /**
   * Gets the value of the 'appFileCount' field.
   * @return The value of the 'appFileCount' field.
   */
  public java.lang.Integer getAppFileCount() {
    return appFileCount;
  }


  /**
   * Gets the value of the 'bypassFileCount' field.
   * @return The value of the 'bypassFileCount' field.
   */
  public java.lang.Integer getBypassFileCount() {
    return bypassFileCount;
  }


  /**
   * Gets the value of the 'comFileCount' field.
   * @return The value of the 'comFileCount' field.
   */
  public java.lang.Integer getComFileCount() {
    return comFileCount;
  }


  /**
   * Gets the value of the 'errorCount' field.
   * @return The value of the 'errorCount' field.
   */
  public java.lang.Integer getErrorCount() {
    return errorCount;
  }


  /**
   * Gets the value of the 'inputEdiDocumentCount' field.
   * @return The value of the 'inputEdiDocumentCount' field.
   */
  public java.lang.Integer getInputEdiDocumentCount() {
    return inputEdiDocumentCount;
  }


  /**
   * Gets the value of the 'inputEdiFileCount' field.
   * @return The value of the 'inputEdiFileCount' field.
   */
  public java.lang.Integer getInputEdiFileCount() {
    return inputEdiFileCount;
  }


  /**
   * Gets the value of the 'inputInterchangeCount' field.
   * @return The value of the 'inputInterchangeCount' field.
   */
  public java.lang.Integer getInputInterchangeCount() {
    return inputInterchangeCount;
  }


  /**
   * Gets the value of the 'inputUdfDocumentCount' field.
   * @return The value of the 'inputUdfDocumentCount' field.
   */
  public java.lang.Integer getInputUdfDocumentCount() {
    return inputUdfDocumentCount;
  }


  /**
   * Gets the value of the 'inputUdfFileCount' field.
   * @return The value of the 'inputUdfFileCount' field.
   */
  public java.lang.Integer getInputUdfFileCount() {
    return inputUdfFileCount;
  }


  /**
   * Gets the value of the 'introspectionSessionNumber' field.
   * @return The value of the 'introspectionSessionNumber' field.
   */
  public java.lang.String getIntrospectionSessionNumber() {
    return introspectionSessionNumber;
  }


  /**
   * Gets the value of the 'introspectionSource' field.
   * @return The value of the 'introspectionSource' field.
   */
  public java.lang.String getIntrospectionSource() {
    return introspectionSource;
  }


  /**
   * Gets the value of the 'outputEdiDocumentCount' field.
   * @return The value of the 'outputEdiDocumentCount' field.
   */
  public java.lang.Integer getOutputEdiDocumentCount() {
    return outputEdiDocumentCount;
  }


  /**
   * Gets the value of the 'outputEdiFileCount' field.
   * @return The value of the 'outputEdiFileCount' field.
   */
  public java.lang.Integer getOutputEdiFileCount() {
    return outputEdiFileCount;
  }


  /**
   * Gets the value of the 'outputInterchangeCount' field.
   * @return The value of the 'outputInterchangeCount' field.
   */
  public java.lang.Integer getOutputInterchangeCount() {
    return outputInterchangeCount;
  }


  /**
   * Gets the value of the 'outputUdfDocumentCount' field.
   * @return The value of the 'outputUdfDocumentCount' field.
   */
  public java.lang.Integer getOutputUdfDocumentCount() {
    return outputUdfDocumentCount;
  }


  /**
   * Gets the value of the 'outputUdfFileCount' field.
   * @return The value of the 'outputUdfFileCount' field.
   */
  public java.lang.Integer getOutputUdfFileCount() {
    return outputUdfFileCount;
  }


  /**
   * Gets the value of the 'rejectedFileCount' field.
   * @return The value of the 'rejectedFileCount' field.
   */
  public java.lang.Integer getRejectedFileCount() {
    return rejectedFileCount;
  }


  /**
   * Gets the value of the 'xifInfo' field.
   * @return The value of the 'xifInfo' field.
   */
  public com.opentext.bn.converters.avro.entity.PayloadRef getXifInfo() {
    return xifInfo;
  }


  /**
   * Creates a new FileIntrospectedEvent RecordBuilder.
   * @return A new FileIntrospectedEvent RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder newBuilder() {
    return new com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder();
  }

  /**
   * Creates a new FileIntrospectedEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FileIntrospectedEvent RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder newBuilder(com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder other) {
    return new com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder(other);
  }

  /**
   * Creates a new FileIntrospectedEvent RecordBuilder by copying an existing FileIntrospectedEvent instance.
   * @param other The existing instance to copy.
   * @return A new FileIntrospectedEvent RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder newBuilder(com.opentext.bn.converters.avro.entity.FileIntrospectedEvent other) {
    return new com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder(other);
  }

  /**
   * RecordBuilder for FileIntrospectedEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FileIntrospectedEvent>
    implements org.apache.avro.data.RecordBuilder<FileIntrospectedEvent> {

    private java.lang.String processId;
    private long eventTimestamp;
    private java.lang.String eventId;
    private java.lang.String transactionId;
    private java.lang.String taskId;
    private java.util.List<com.opentext.bn.converters.avro.entity.Asset> assets;
    private int appFileCount;
    private int bypassFileCount;
    private int comFileCount;
    private int errorCount;
    private int inputEdiDocumentCount;
    private int inputEdiFileCount;
    private int inputInterchangeCount;
    private int inputUdfDocumentCount;
    private int inputUdfFileCount;
    private java.lang.String introspectionSessionNumber;
    private java.lang.String introspectionSource;
    private int outputEdiDocumentCount;
    private int outputEdiFileCount;
    private int outputInterchangeCount;
    private int outputUdfDocumentCount;
    private int outputUdfFileCount;
    private int rejectedFileCount;
    private com.opentext.bn.converters.avro.entity.PayloadRef xifInfo;
    private com.opentext.bn.converters.avro.entity.PayloadRef.Builder xifInfoBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.processId)) {
        this.processId = data().deepCopy(fields()[0].schema(), other.processId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[1].schema(), other.eventTimestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventId)) {
        this.eventId = data().deepCopy(fields()[2].schema(), other.eventId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.transactionId)) {
        this.transactionId = data().deepCopy(fields()[3].schema(), other.transactionId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.taskId)) {
        this.taskId = data().deepCopy(fields()[4].schema(), other.taskId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.assets)) {
        this.assets = data().deepCopy(fields()[5].schema(), other.assets);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.appFileCount)) {
        this.appFileCount = data().deepCopy(fields()[6].schema(), other.appFileCount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.bypassFileCount)) {
        this.bypassFileCount = data().deepCopy(fields()[7].schema(), other.bypassFileCount);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.comFileCount)) {
        this.comFileCount = data().deepCopy(fields()[8].schema(), other.comFileCount);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.errorCount)) {
        this.errorCount = data().deepCopy(fields()[9].schema(), other.errorCount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.inputEdiDocumentCount)) {
        this.inputEdiDocumentCount = data().deepCopy(fields()[10].schema(), other.inputEdiDocumentCount);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.inputEdiFileCount)) {
        this.inputEdiFileCount = data().deepCopy(fields()[11].schema(), other.inputEdiFileCount);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.inputInterchangeCount)) {
        this.inputInterchangeCount = data().deepCopy(fields()[12].schema(), other.inputInterchangeCount);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.inputUdfDocumentCount)) {
        this.inputUdfDocumentCount = data().deepCopy(fields()[13].schema(), other.inputUdfDocumentCount);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.inputUdfFileCount)) {
        this.inputUdfFileCount = data().deepCopy(fields()[14].schema(), other.inputUdfFileCount);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.introspectionSessionNumber)) {
        this.introspectionSessionNumber = data().deepCopy(fields()[15].schema(), other.introspectionSessionNumber);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.introspectionSource)) {
        this.introspectionSource = data().deepCopy(fields()[16].schema(), other.introspectionSource);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.outputEdiDocumentCount)) {
        this.outputEdiDocumentCount = data().deepCopy(fields()[17].schema(), other.outputEdiDocumentCount);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.outputEdiFileCount)) {
        this.outputEdiFileCount = data().deepCopy(fields()[18].schema(), other.outputEdiFileCount);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.outputInterchangeCount)) {
        this.outputInterchangeCount = data().deepCopy(fields()[19].schema(), other.outputInterchangeCount);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.outputUdfDocumentCount)) {
        this.outputUdfDocumentCount = data().deepCopy(fields()[20].schema(), other.outputUdfDocumentCount);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.outputUdfFileCount)) {
        this.outputUdfFileCount = data().deepCopy(fields()[21].schema(), other.outputUdfFileCount);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.rejectedFileCount)) {
        this.rejectedFileCount = data().deepCopy(fields()[22].schema(), other.rejectedFileCount);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.xifInfo)) {
        this.xifInfo = data().deepCopy(fields()[23].schema(), other.xifInfo);
        fieldSetFlags()[23] = true;
      }
      if (other.hasXifInfoBuilder()) {
        this.xifInfoBuilder = com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder(other.getXifInfoBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing FileIntrospectedEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.opentext.bn.converters.avro.entity.FileIntrospectedEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.processId)) {
        this.processId = data().deepCopy(fields()[0].schema(), other.processId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[1].schema(), other.eventTimestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventId)) {
        this.eventId = data().deepCopy(fields()[2].schema(), other.eventId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.transactionId)) {
        this.transactionId = data().deepCopy(fields()[3].schema(), other.transactionId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.taskId)) {
        this.taskId = data().deepCopy(fields()[4].schema(), other.taskId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.assets)) {
        this.assets = data().deepCopy(fields()[5].schema(), other.assets);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.appFileCount)) {
        this.appFileCount = data().deepCopy(fields()[6].schema(), other.appFileCount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.bypassFileCount)) {
        this.bypassFileCount = data().deepCopy(fields()[7].schema(), other.bypassFileCount);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.comFileCount)) {
        this.comFileCount = data().deepCopy(fields()[8].schema(), other.comFileCount);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.errorCount)) {
        this.errorCount = data().deepCopy(fields()[9].schema(), other.errorCount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.inputEdiDocumentCount)) {
        this.inputEdiDocumentCount = data().deepCopy(fields()[10].schema(), other.inputEdiDocumentCount);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.inputEdiFileCount)) {
        this.inputEdiFileCount = data().deepCopy(fields()[11].schema(), other.inputEdiFileCount);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.inputInterchangeCount)) {
        this.inputInterchangeCount = data().deepCopy(fields()[12].schema(), other.inputInterchangeCount);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.inputUdfDocumentCount)) {
        this.inputUdfDocumentCount = data().deepCopy(fields()[13].schema(), other.inputUdfDocumentCount);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.inputUdfFileCount)) {
        this.inputUdfFileCount = data().deepCopy(fields()[14].schema(), other.inputUdfFileCount);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.introspectionSessionNumber)) {
        this.introspectionSessionNumber = data().deepCopy(fields()[15].schema(), other.introspectionSessionNumber);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.introspectionSource)) {
        this.introspectionSource = data().deepCopy(fields()[16].schema(), other.introspectionSource);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.outputEdiDocumentCount)) {
        this.outputEdiDocumentCount = data().deepCopy(fields()[17].schema(), other.outputEdiDocumentCount);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.outputEdiFileCount)) {
        this.outputEdiFileCount = data().deepCopy(fields()[18].schema(), other.outputEdiFileCount);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.outputInterchangeCount)) {
        this.outputInterchangeCount = data().deepCopy(fields()[19].schema(), other.outputInterchangeCount);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.outputUdfDocumentCount)) {
        this.outputUdfDocumentCount = data().deepCopy(fields()[20].schema(), other.outputUdfDocumentCount);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.outputUdfFileCount)) {
        this.outputUdfFileCount = data().deepCopy(fields()[21].schema(), other.outputUdfFileCount);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.rejectedFileCount)) {
        this.rejectedFileCount = data().deepCopy(fields()[22].schema(), other.rejectedFileCount);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.xifInfo)) {
        this.xifInfo = data().deepCopy(fields()[23].schema(), other.xifInfo);
        fieldSetFlags()[23] = true;
      }
      this.xifInfoBuilder = null;
    }

    /**
      * Gets the value of the 'processId' field.
      * @return The value.
      */
    public java.lang.String getProcessId() {
      return processId;
    }

    /**
      * Sets the value of the 'processId' field.
      * @param value The value of 'processId'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setProcessId(java.lang.String value) {
      validate(fields()[0], value);
      this.processId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'processId' field has been set.
      * @return True if the 'processId' field has been set, false otherwise.
      */
    public boolean hasProcessId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'processId' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearProcessId() {
      processId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventTimestamp' field.
      * @return The value.
      */
    public java.lang.Long getEventTimestamp() {
      return eventTimestamp;
    }

    /**
      * Sets the value of the 'eventTimestamp' field.
      * @param value The value of 'eventTimestamp'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setEventTimestamp(long value) {
      validate(fields()[1], value);
      this.eventTimestamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'eventTimestamp' field has been set.
      * @return True if the 'eventTimestamp' field has been set, false otherwise.
      */
    public boolean hasEventTimestamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'eventTimestamp' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearEventTimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventId' field.
      * @return The value.
      */
    public java.lang.String getEventId() {
      return eventId;
    }

    /**
      * Sets the value of the 'eventId' field.
      * @param value The value of 'eventId'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setEventId(java.lang.String value) {
      validate(fields()[2], value);
      this.eventId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'eventId' field has been set.
      * @return True if the 'eventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'eventId' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearEventId() {
      eventId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionId' field.
      * @return The value.
      */
    public java.lang.String getTransactionId() {
      return transactionId;
    }

    /**
      * Sets the value of the 'transactionId' field.
      * @param value The value of 'transactionId'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setTransactionId(java.lang.String value) {
      validate(fields()[3], value);
      this.transactionId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionId' field has been set.
      * @return True if the 'transactionId' field has been set, false otherwise.
      */
    public boolean hasTransactionId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'transactionId' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearTransactionId() {
      transactionId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'taskId' field.
      * @return The value.
      */
    public java.lang.String getTaskId() {
      return taskId;
    }

    /**
      * Sets the value of the 'taskId' field.
      * @param value The value of 'taskId'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setTaskId(java.lang.String value) {
      validate(fields()[4], value);
      this.taskId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'taskId' field has been set.
      * @return True if the 'taskId' field has been set, false otherwise.
      */
    public boolean hasTaskId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'taskId' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearTaskId() {
      taskId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'assets' field.
      * @return The value.
      */
    public java.util.List<com.opentext.bn.converters.avro.entity.Asset> getAssets() {
      return assets;
    }

    /**
      * Sets the value of the 'assets' field.
      * @param value The value of 'assets'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setAssets(java.util.List<com.opentext.bn.converters.avro.entity.Asset> value) {
      validate(fields()[5], value);
      this.assets = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'assets' field has been set.
      * @return True if the 'assets' field has been set, false otherwise.
      */
    public boolean hasAssets() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'assets' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearAssets() {
      assets = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'appFileCount' field.
      * @return The value.
      */
    public java.lang.Integer getAppFileCount() {
      return appFileCount;
    }

    /**
      * Sets the value of the 'appFileCount' field.
      * @param value The value of 'appFileCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setAppFileCount(int value) {
      validate(fields()[6], value);
      this.appFileCount = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'appFileCount' field has been set.
      * @return True if the 'appFileCount' field has been set, false otherwise.
      */
    public boolean hasAppFileCount() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'appFileCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearAppFileCount() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'bypassFileCount' field.
      * @return The value.
      */
    public java.lang.Integer getBypassFileCount() {
      return bypassFileCount;
    }

    /**
      * Sets the value of the 'bypassFileCount' field.
      * @param value The value of 'bypassFileCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setBypassFileCount(int value) {
      validate(fields()[7], value);
      this.bypassFileCount = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'bypassFileCount' field has been set.
      * @return True if the 'bypassFileCount' field has been set, false otherwise.
      */
    public boolean hasBypassFileCount() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'bypassFileCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearBypassFileCount() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'comFileCount' field.
      * @return The value.
      */
    public java.lang.Integer getComFileCount() {
      return comFileCount;
    }

    /**
      * Sets the value of the 'comFileCount' field.
      * @param value The value of 'comFileCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setComFileCount(int value) {
      validate(fields()[8], value);
      this.comFileCount = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'comFileCount' field has been set.
      * @return True if the 'comFileCount' field has been set, false otherwise.
      */
    public boolean hasComFileCount() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'comFileCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearComFileCount() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'errorCount' field.
      * @return The value.
      */
    public java.lang.Integer getErrorCount() {
      return errorCount;
    }

    /**
      * Sets the value of the 'errorCount' field.
      * @param value The value of 'errorCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setErrorCount(int value) {
      validate(fields()[9], value);
      this.errorCount = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'errorCount' field has been set.
      * @return True if the 'errorCount' field has been set, false otherwise.
      */
    public boolean hasErrorCount() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'errorCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearErrorCount() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'inputEdiDocumentCount' field.
      * @return The value.
      */
    public java.lang.Integer getInputEdiDocumentCount() {
      return inputEdiDocumentCount;
    }

    /**
      * Sets the value of the 'inputEdiDocumentCount' field.
      * @param value The value of 'inputEdiDocumentCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setInputEdiDocumentCount(int value) {
      validate(fields()[10], value);
      this.inputEdiDocumentCount = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'inputEdiDocumentCount' field has been set.
      * @return True if the 'inputEdiDocumentCount' field has been set, false otherwise.
      */
    public boolean hasInputEdiDocumentCount() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'inputEdiDocumentCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearInputEdiDocumentCount() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'inputEdiFileCount' field.
      * @return The value.
      */
    public java.lang.Integer getInputEdiFileCount() {
      return inputEdiFileCount;
    }

    /**
      * Sets the value of the 'inputEdiFileCount' field.
      * @param value The value of 'inputEdiFileCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setInputEdiFileCount(int value) {
      validate(fields()[11], value);
      this.inputEdiFileCount = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'inputEdiFileCount' field has been set.
      * @return True if the 'inputEdiFileCount' field has been set, false otherwise.
      */
    public boolean hasInputEdiFileCount() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'inputEdiFileCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearInputEdiFileCount() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'inputInterchangeCount' field.
      * @return The value.
      */
    public java.lang.Integer getInputInterchangeCount() {
      return inputInterchangeCount;
    }

    /**
      * Sets the value of the 'inputInterchangeCount' field.
      * @param value The value of 'inputInterchangeCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setInputInterchangeCount(int value) {
      validate(fields()[12], value);
      this.inputInterchangeCount = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'inputInterchangeCount' field has been set.
      * @return True if the 'inputInterchangeCount' field has been set, false otherwise.
      */
    public boolean hasInputInterchangeCount() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'inputInterchangeCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearInputInterchangeCount() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'inputUdfDocumentCount' field.
      * @return The value.
      */
    public java.lang.Integer getInputUdfDocumentCount() {
      return inputUdfDocumentCount;
    }

    /**
      * Sets the value of the 'inputUdfDocumentCount' field.
      * @param value The value of 'inputUdfDocumentCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setInputUdfDocumentCount(int value) {
      validate(fields()[13], value);
      this.inputUdfDocumentCount = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'inputUdfDocumentCount' field has been set.
      * @return True if the 'inputUdfDocumentCount' field has been set, false otherwise.
      */
    public boolean hasInputUdfDocumentCount() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'inputUdfDocumentCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearInputUdfDocumentCount() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'inputUdfFileCount' field.
      * @return The value.
      */
    public java.lang.Integer getInputUdfFileCount() {
      return inputUdfFileCount;
    }

    /**
      * Sets the value of the 'inputUdfFileCount' field.
      * @param value The value of 'inputUdfFileCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setInputUdfFileCount(int value) {
      validate(fields()[14], value);
      this.inputUdfFileCount = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'inputUdfFileCount' field has been set.
      * @return True if the 'inputUdfFileCount' field has been set, false otherwise.
      */
    public boolean hasInputUdfFileCount() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'inputUdfFileCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearInputUdfFileCount() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'introspectionSessionNumber' field.
      * @return The value.
      */
    public java.lang.String getIntrospectionSessionNumber() {
      return introspectionSessionNumber;
    }

    /**
      * Sets the value of the 'introspectionSessionNumber' field.
      * @param value The value of 'introspectionSessionNumber'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setIntrospectionSessionNumber(java.lang.String value) {
      validate(fields()[15], value);
      this.introspectionSessionNumber = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'introspectionSessionNumber' field has been set.
      * @return True if the 'introspectionSessionNumber' field has been set, false otherwise.
      */
    public boolean hasIntrospectionSessionNumber() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'introspectionSessionNumber' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearIntrospectionSessionNumber() {
      introspectionSessionNumber = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'introspectionSource' field.
      * @return The value.
      */
    public java.lang.String getIntrospectionSource() {
      return introspectionSource;
    }

    /**
      * Sets the value of the 'introspectionSource' field.
      * @param value The value of 'introspectionSource'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setIntrospectionSource(java.lang.String value) {
      validate(fields()[16], value);
      this.introspectionSource = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'introspectionSource' field has been set.
      * @return True if the 'introspectionSource' field has been set, false otherwise.
      */
    public boolean hasIntrospectionSource() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'introspectionSource' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearIntrospectionSource() {
      introspectionSource = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'outputEdiDocumentCount' field.
      * @return The value.
      */
    public java.lang.Integer getOutputEdiDocumentCount() {
      return outputEdiDocumentCount;
    }

    /**
      * Sets the value of the 'outputEdiDocumentCount' field.
      * @param value The value of 'outputEdiDocumentCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setOutputEdiDocumentCount(int value) {
      validate(fields()[17], value);
      this.outputEdiDocumentCount = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'outputEdiDocumentCount' field has been set.
      * @return True if the 'outputEdiDocumentCount' field has been set, false otherwise.
      */
    public boolean hasOutputEdiDocumentCount() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'outputEdiDocumentCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearOutputEdiDocumentCount() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'outputEdiFileCount' field.
      * @return The value.
      */
    public java.lang.Integer getOutputEdiFileCount() {
      return outputEdiFileCount;
    }

    /**
      * Sets the value of the 'outputEdiFileCount' field.
      * @param value The value of 'outputEdiFileCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setOutputEdiFileCount(int value) {
      validate(fields()[18], value);
      this.outputEdiFileCount = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'outputEdiFileCount' field has been set.
      * @return True if the 'outputEdiFileCount' field has been set, false otherwise.
      */
    public boolean hasOutputEdiFileCount() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'outputEdiFileCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearOutputEdiFileCount() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'outputInterchangeCount' field.
      * @return The value.
      */
    public java.lang.Integer getOutputInterchangeCount() {
      return outputInterchangeCount;
    }

    /**
      * Sets the value of the 'outputInterchangeCount' field.
      * @param value The value of 'outputInterchangeCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setOutputInterchangeCount(int value) {
      validate(fields()[19], value);
      this.outputInterchangeCount = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'outputInterchangeCount' field has been set.
      * @return True if the 'outputInterchangeCount' field has been set, false otherwise.
      */
    public boolean hasOutputInterchangeCount() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'outputInterchangeCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearOutputInterchangeCount() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'outputUdfDocumentCount' field.
      * @return The value.
      */
    public java.lang.Integer getOutputUdfDocumentCount() {
      return outputUdfDocumentCount;
    }

    /**
      * Sets the value of the 'outputUdfDocumentCount' field.
      * @param value The value of 'outputUdfDocumentCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setOutputUdfDocumentCount(int value) {
      validate(fields()[20], value);
      this.outputUdfDocumentCount = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'outputUdfDocumentCount' field has been set.
      * @return True if the 'outputUdfDocumentCount' field has been set, false otherwise.
      */
    public boolean hasOutputUdfDocumentCount() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'outputUdfDocumentCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearOutputUdfDocumentCount() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'outputUdfFileCount' field.
      * @return The value.
      */
    public java.lang.Integer getOutputUdfFileCount() {
      return outputUdfFileCount;
    }

    /**
      * Sets the value of the 'outputUdfFileCount' field.
      * @param value The value of 'outputUdfFileCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setOutputUdfFileCount(int value) {
      validate(fields()[21], value);
      this.outputUdfFileCount = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'outputUdfFileCount' field has been set.
      * @return True if the 'outputUdfFileCount' field has been set, false otherwise.
      */
    public boolean hasOutputUdfFileCount() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'outputUdfFileCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearOutputUdfFileCount() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'rejectedFileCount' field.
      * @return The value.
      */
    public java.lang.Integer getRejectedFileCount() {
      return rejectedFileCount;
    }

    /**
      * Sets the value of the 'rejectedFileCount' field.
      * @param value The value of 'rejectedFileCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setRejectedFileCount(int value) {
      validate(fields()[22], value);
      this.rejectedFileCount = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'rejectedFileCount' field has been set.
      * @return True if the 'rejectedFileCount' field has been set, false otherwise.
      */
    public boolean hasRejectedFileCount() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'rejectedFileCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearRejectedFileCount() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'xifInfo' field.
      * @return The value.
      */
    public com.opentext.bn.converters.avro.entity.PayloadRef getXifInfo() {
      return xifInfo;
    }

    /**
      * Sets the value of the 'xifInfo' field.
      * @param value The value of 'xifInfo'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setXifInfo(com.opentext.bn.converters.avro.entity.PayloadRef value) {
      validate(fields()[23], value);
      this.xifInfoBuilder = null;
      this.xifInfo = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'xifInfo' field has been set.
      * @return True if the 'xifInfo' field has been set, false otherwise.
      */
    public boolean hasXifInfo() {
      return fieldSetFlags()[23];
    }

    /**
     * Gets the Builder instance for the 'xifInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.PayloadRef.Builder getXifInfoBuilder() {
      if (xifInfoBuilder == null) {
        if (hasXifInfo()) {
          setXifInfoBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder(xifInfo));
        } else {
          setXifInfoBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder());
        }
      }
      return xifInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'xifInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder setXifInfoBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.Builder value) {
      clearXifInfo();
      xifInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'xifInfo' field has an active Builder instance
     * @return True if the 'xifInfo' field has an active Builder instance
     */
    public boolean hasXifInfoBuilder() {
      return xifInfoBuilder != null;
    }

    /**
      * Clears the value of the 'xifInfo' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.FileIntrospectedEvent.Builder clearXifInfo() {
      xifInfo = null;
      xifInfoBuilder = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FileIntrospectedEvent build() {
      try {
        FileIntrospectedEvent record = new FileIntrospectedEvent();
        record.processId = fieldSetFlags()[0] ? this.processId : (java.lang.String) defaultValue(fields()[0]);
        record.eventTimestamp = fieldSetFlags()[1] ? this.eventTimestamp : (java.lang.Long) defaultValue(fields()[1]);
        record.eventId = fieldSetFlags()[2] ? this.eventId : (java.lang.String) defaultValue(fields()[2]);
        record.transactionId = fieldSetFlags()[3] ? this.transactionId : (java.lang.String) defaultValue(fields()[3]);
        record.taskId = fieldSetFlags()[4] ? this.taskId : (java.lang.String) defaultValue(fields()[4]);
        record.assets = fieldSetFlags()[5] ? this.assets : (java.util.List<com.opentext.bn.converters.avro.entity.Asset>) defaultValue(fields()[5]);
        record.appFileCount = fieldSetFlags()[6] ? this.appFileCount : (java.lang.Integer) defaultValue(fields()[6]);
        record.bypassFileCount = fieldSetFlags()[7] ? this.bypassFileCount : (java.lang.Integer) defaultValue(fields()[7]);
        record.comFileCount = fieldSetFlags()[8] ? this.comFileCount : (java.lang.Integer) defaultValue(fields()[8]);
        record.errorCount = fieldSetFlags()[9] ? this.errorCount : (java.lang.Integer) defaultValue(fields()[9]);
        record.inputEdiDocumentCount = fieldSetFlags()[10] ? this.inputEdiDocumentCount : (java.lang.Integer) defaultValue(fields()[10]);
        record.inputEdiFileCount = fieldSetFlags()[11] ? this.inputEdiFileCount : (java.lang.Integer) defaultValue(fields()[11]);
        record.inputInterchangeCount = fieldSetFlags()[12] ? this.inputInterchangeCount : (java.lang.Integer) defaultValue(fields()[12]);
        record.inputUdfDocumentCount = fieldSetFlags()[13] ? this.inputUdfDocumentCount : (java.lang.Integer) defaultValue(fields()[13]);
        record.inputUdfFileCount = fieldSetFlags()[14] ? this.inputUdfFileCount : (java.lang.Integer) defaultValue(fields()[14]);
        record.introspectionSessionNumber = fieldSetFlags()[15] ? this.introspectionSessionNumber : (java.lang.String) defaultValue(fields()[15]);
        record.introspectionSource = fieldSetFlags()[16] ? this.introspectionSource : (java.lang.String) defaultValue(fields()[16]);
        record.outputEdiDocumentCount = fieldSetFlags()[17] ? this.outputEdiDocumentCount : (java.lang.Integer) defaultValue(fields()[17]);
        record.outputEdiFileCount = fieldSetFlags()[18] ? this.outputEdiFileCount : (java.lang.Integer) defaultValue(fields()[18]);
        record.outputInterchangeCount = fieldSetFlags()[19] ? this.outputInterchangeCount : (java.lang.Integer) defaultValue(fields()[19]);
        record.outputUdfDocumentCount = fieldSetFlags()[20] ? this.outputUdfDocumentCount : (java.lang.Integer) defaultValue(fields()[20]);
        record.outputUdfFileCount = fieldSetFlags()[21] ? this.outputUdfFileCount : (java.lang.Integer) defaultValue(fields()[21]);
        record.rejectedFileCount = fieldSetFlags()[22] ? this.rejectedFileCount : (java.lang.Integer) defaultValue(fields()[22]);
        if (xifInfoBuilder != null) {
          record.xifInfo = this.xifInfoBuilder.build();
        } else {
          record.xifInfo = fieldSetFlags()[23] ? this.xifInfo : (com.opentext.bn.converters.avro.entity.PayloadRef) defaultValue(fields()[23]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FileIntrospectedEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<FileIntrospectedEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FileIntrospectedEvent>
    READER$ = (org.apache.avro.io.DatumReader<FileIntrospectedEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
